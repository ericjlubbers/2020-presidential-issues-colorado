{"version":3,"sources":["webpack:///./src/templates/issue-template.js","webpack:///./src/components/breadcrumbs.js"],"names":["data","intro","allGoogleSpreadsheetCategories","answers","allGoogleSpreadsheetAnswers","questions","allGoogleSpreadsheetQuestions","id","class","edges","map","index","node","icon","iconId","size","categoryName","questionLabel","questionText","dangerouslySetInnerHTML","__html","background","candidateId","alt","candidateName","shortAnswer","longAnswer","query","aria-label","to"],"mappings":"2FAAA,kOAkBe,sBAAe,IAAZA,EAAW,EAAXA,KACVC,EAAQD,EAAKE,+BACbC,EAAUH,EAAKI,4BACfC,EAAYL,EAAKM,8BAEvB,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,MACA,kBAAC,IAAD,KACA,kBAAC,IAAD,OAEA,kBAAC,IAAD,MAEA,yBAAKC,GAAG,cACR,6BAASC,MAAM,WAEdP,EAAMQ,MAAMC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACf,6BAAK,yBAAKJ,MAAM,YAAYD,GAAG,SAC/B,wBAAIC,MAAM,yCAAwC,kBAAC,IAAD,CAAiBK,KAAMD,EAAKE,OAAQC,KAAK,OAA3F,KAA+GH,EAAKI,cACpH,wBAAIR,MAAM,4BACV,qCAIA,yBAAKA,MAAM,aACX,yBAAKA,MAAM,uBACX,yBAAKA,MAAM,qEACX,yBAAKA,MAAM,8CAEVH,EAAUI,MAAMC,KAAI,gBAAGE,EAAH,EAAGA,KAAH,OACnB,6BACE,yBAAKJ,MAAM,oBACT,yBAAKA,MAAM,8BACT,6BAASA,MAAM,qDACb,6BAASA,MAAM,SACb,4BAAQA,MAAM,cACZ,uBAAGA,MAAM,qDAAT,OAEF,yBAAKA,MAAM,iBACX,yBAAKA,MAAM,WACT,uBAAGA,MAAM,yBAAyBI,EAAKK,eACvC,wBAAIT,MAAM,sDAAV,IAAiEI,EAAKM,mBAM9E,yBAAKV,MAAM,8BACT,yBAAKA,MAAM,aACT,6BAASA,MAAM,mDACd,uBAAGA,MAAM,aAAY,+CAArB,IAAuD,0BAAMW,wBAAyB,CAAEC,OAAQR,EAAKS,mBAM1GlB,EAAQM,MAAMC,KAAI,gBAAGE,EAAH,EAAGA,KAAH,OAClB,6BACA,gCACA,yBAAKJ,MAAM,2BACX,yBAAKA,MAAM,oDACX,4BAAQA,MAAM,4BACd,kBAAC,IAAD,CAAmBD,GAAIK,EAAKU,aAAa,kBAAC,IAAD,CAAcf,GAAIK,EAAKU,YAAaC,IAAKX,EAAKY,kBAEvF,uBAAGhB,MAAM,4CAA2C,kBAAC,IAAD,CAAmBD,GAAIK,EAAKU,aAAcV,EAAKY,iBAEnG,yBAAKhB,MAAM,UACX,uBAAGA,MAAM,6DAA6DI,EAAKa,aAC3E,uBAAGjB,MAAM,uDAAsD,uCAAoB,0BAAMW,wBAAyB,CAAEC,OAAQR,EAAKc,iBAGjI,gCACA,8CA6BJ,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,QAIK,IAAMC,EAAK,c,kCC7HxB,iDAGe,sBACX,6BAAK,gCAAa,yBAAKnB,MAAM,mCAAmCoB,aAAW,eAC7E,4BACE,4BAAI,kBAAC,OAAD,CAAMC,GAAG,KAAI,kBAAC,IAAD,CAAiBhB,KAAK,SAAnC,UACJ,4BAAI,kBAAC,OAAD,CAAMgB,GAAG,WAAU,kBAAC,IAAD,CAAiBhB,KAAK,uBAAzC,YACJ,4BAAI,kBAAC,OAAD,CAAMgB,GAAG,eAAc,kBAAC,IAAD,CAAiBhB,KAAK,UAA7C","file":"component---src-templates-issue-template-js-d3f845168654e7c07975.js","sourcesContent":["import React from 'react';\nimport HeadlineBox from '../components/headline-box';\nimport Byline from '../components/byline';\nimport Layout from '../components/layout';\nimport NavbarTop from '../components/navbar-top';\nimport IssueTiles from '../components/issue-tiles';\nimport CandidateCardsLive from '../components/candidate-cards-live';\nimport Footer from '../components/footer';\nimport '../components/style.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { graphql, Link } from \"gatsby\"\nimport CandidateMug from '../components/mug';\nimport CandidatePageLink from '../components/candidate-link';\nimport Breadcrumbs from '../components/breadcrumbs';\n\n\n\n\nexport default ({ data }) => {\n  const intro = data.allGoogleSpreadsheetCategories\n  const answers = data.allGoogleSpreadsheetAnswers\n  const questions = data.allGoogleSpreadsheetQuestions\n  // const questions = data.allGoogleSpreadsheetQuestions\n  return (\n    <Layout>\n    <NavbarTop/>\n    <HeadlineBox>\n    <Byline/>\n    </HeadlineBox>\n    <Breadcrumbs/>\n\n    <div id=\"candidates\">\n    <section class=\"section\">\n    {/* CATEGORY INTRO */}\n    {intro.edges.map(({ node }, index) => (\n      <div><div class=\"container\" id=\"start\">\n      <h2 class=\"title is-2 has-rule has-text-centered\"><FontAwesomeIcon icon={node.iconId} size=\"1x\" />&nbsp;&nbsp;{node.categoryName}</h2>\n      <hr class=\"level has-text-centered\"/>\n      <p>&nbsp;</p>\n      </div></div>\n      ))} \n      \n      <div class=\"container\">\n      <div class=\"columns is-centered\">\n      <div class=\"column is-full-mobile is-full-tablet is-9-desktop is-6-fullscreen\">\n      <div class=\"columns is-multiline is-mobile is-centered\">\n      {/* QUESTIONS AND ANSWERS */}\n      {questions.edges.map(({ node }) => (\n        <div>\n          <div class=\"tile is-ancestor\">\n            <div class=\"tile is-parent is-vertical\">\n              <article class=\"tile notification is-primary is-child is-vertical\">\n                <article class=\"media\">\n                  <figure class=\"media-left\">\n                    <p class=\"title has-text-warning is-size-3 is-size-5-mobile\">Q:</p>\n                  </figure>\n                  <div class=\"media-content\">\n                  <div class=\"content\">\n                    <p class=\"title label is-size-6\">{node.questionLabel}</p>\n                    <h3 class=\"title question nopadtop is-size-4 is-size-5-mobile\"> {node.questionText}</h3>\n                  </div>\n                  </div>\n                </article>\n              </article>\n            </div>\n            <div class=\"tile is-parent is-vertical\">\n              <div class=\"container\">\n                <article class=\"tile is-child is-vertical notification is-light\">\n                 <p class=\"is-size-6\"><strong>Background:</strong>&nbsp;<span dangerouslySetInnerHTML={{ __html: node.background }} /></p>\n               </article>\n              </div>\n            </div>\n          </div>\n          \n           {answers.edges.map(({ node }) => (\n            <div>\n            <p>&nbsp;</p>\n            <div class=\"columns is-centered box\">\n            <div class=\"column is-2 is-3-tablet is-3-desktop is-2-fullhd\">\n            <figure class=\"image container is-96x96\">\n            <CandidatePageLink id={node.candidateId}><CandidateMug id={node.candidateId} alt={node.candidateName}/></CandidatePageLink>\n            </figure>\n            <p class=\"title is-size-6 toppad has-text-centered\"><CandidatePageLink id={node.candidateId}>{node.candidateName}</CandidatePageLink></p>\n            </div>\n            <div class=\"column\">\n            <p class=\"title is-size-4-desktop is-size-5-tablet is-size-5-mobile\">{node.shortAnswer}</p>\n            <p class=\"is-size-5-desktop is-size-5-tablet is-size-5-mobile\"><strong>A: </strong><span dangerouslySetInnerHTML={{ __html: node.longAnswer }}/></p>\n            </div>\n            </div>\n            <p>&nbsp;</p>\n            <p>&nbsp;</p>\n            </div>\n\n           ))} \n          \n        {/* <div>\n        <p>&nbsp;</p>\n        <div class=\"columns is-centered box\">\n        <div class=\"column is-1 is-2-tablet is-2-desktop is-1-fullhd\">\n        <figure class=\"image container is-96x96\">\n        <CandidatePageLink id={node.candidateId}><CandidateMug id={node.candidateId} alt={node.candidateName}/></CandidatePageLink>\n        </figure>\n        <p class=\"title is-size-6 toppad has-text-centered\"><CandidatePageLink id={node.candidateId}>{node.candidateName}</CandidatePageLink></p>\n        </div>\n        <div class=\"column\">\n        <p class=\"title is-size-4-desktop is-size-5-tablet is-size-5-mobile\">{node.shortAnswer}</p>\n        <p><strong>A: </strong>{node.longAnswer}</p>\n        </div>\n        </div>\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        </div> */}\n\n        </div>\n        ))}\n        </div>\n        </div>\n        </div>\n        </div></section></div>\n        <IssueTiles />\n        <CandidateCardsLive />\n        <Footer />\n        </Layout>\n        )\n      }\n      export const query = graphql`\n      query($categorySlug: String!){\n        sitePage {\n          context {\n            categorySlug\n          }\n        }\n        allGoogleSpreadsheetCategories(filter: {categorySlug: {eq: $categorySlug}}) {\n          edges {\n            node {\n              categoryName\n              categorySlug\n              iconId\n            }\n          }\n        }\n        allGoogleSpreadsheetAnswers(filter: {categorySlug: {eq: $categorySlug}}) {\n          edges {\n            node {\n              background\n              candidateName\n              category\n              categorySlug\n              questionLabel\n              questionSlug\n              questionText\n              shortAnswer\n              longAnswer\n              candidateId\n              candidateInfo\n              candidateMug\n            }\n          }\n        }\n          allGoogleSpreadsheetQuestions(filter: {categorySlug: {eq: $categorySlug}}){\n            edges {\n              node {\n                background\n                category\n                questionLabel\n                questionSlug\n                questionText\n                categorySlug\n              }\n            }\n          }\n      }\n      `","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  Link } from \"gatsby\"\nexport default ()  => (\n    <div><p>&nbsp;</p><nav class=\"breadcrumb is-centered is-medium\" aria-label=\"breadcrumbs\">\n  <ul>\n    <li><Link to=\"/\"><FontAwesomeIcon icon=\"home\" />&nbsp;Home</Link></li>\n    <li><Link to=\"#issues\"><FontAwesomeIcon icon=\"envelope-open-text\" />&nbsp;Issues</Link></li>\n    <li><Link to=\"#candidates\"><FontAwesomeIcon icon=\"users\" />&nbsp;Candidates</Link></li>\n  </ul>\n</nav></div>\n  )"],"sourceRoot":""}