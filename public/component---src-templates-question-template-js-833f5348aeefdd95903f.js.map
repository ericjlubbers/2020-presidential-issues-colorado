{"version":3,"sources":["webpack:///./src/templates/question-template.js"],"names":["data","question","allGoogleSpreadsheetQuestions","answers","allGoogleSpreadsheetAnswers","id","class","edges","map","node","questionSlug","questionLabel","questionText","categorySlug","icon","category","iconId","dangerouslySetInnerHTML","__html","background","candidateId","alt","candidateName","status","campaignStatus","shortAnswer","longAnswer","query"],"mappings":"8FAAA,8OAmBe,sBAAe,IAAZA,EAAW,EAAXA,KACRC,EAAWD,EAAKE,8BAChBC,EAAUH,EAAKI,4BACrB,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,OAEJ,kBAAC,IAAD,MAEA,yBAAKC,GAAG,cACV,6BAASC,MAAM,WACf,yBAAKA,MAAM,aACP,yBAAKA,MAAM,uBACP,yBAAKA,MAAM,qEACVL,EAASM,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAAe,wBAAIH,MAAM,wFAAuF,kBAAC,IAAD,CAAkBD,GAAII,EAAKC,eAA5H,MAA+ID,EAAKE,kBAE/L,wBAAIL,MAAM,4BACV,gCACQ,yBAAKA,MAAM,8CAERL,EAASM,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAE1B,yBAAKH,MAAM,qBACT,yBAAKA,MAAM,8BACT,6BAASA,MAAM,qDACb,6BAASA,MAAM,SACb,4BAAQA,MAAM,cACZ,uBAAGA,MAAM,+DAAT,OAEF,yBAAKA,MAAM,iBACX,yBAAKA,MAAM,WAET,wBAAIA,MAAM,sDAAV,IAAiEG,EAAKG,cACtE,yBAAKN,MAAM,2BAA0B,kBAAC,IAAD,CAAeD,GAAII,EAAKI,cAAc,4BAAQP,MAAM,gFAA+E,kBAAC,IAAD,CAAiBQ,KAAM,uBAApH,KAAyJL,EAAKM,SAA9J,KAAmL,kBAAC,IAAD,CAAiBD,KAAML,EAAKO,iBAQlS,yBAAKV,MAAM,8BACT,yBAAKA,MAAM,aACT,6BAASA,MAAM,mDACd,uBAAGA,MAAM,aAAY,+CAArB,IAAuD,0BAAMW,wBAAyB,CAAEC,OAAQT,EAAKU,sBAOtG,6BACChB,EAAQI,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACnB,yBAAKH,MAAOG,EAAKC,cACrB,gCACA,yBAAKJ,MAAM,2BACX,yBAAKA,MAAM,oDACX,4BAAQA,MAAM,4BACd,kBAAC,IAAD,CAAmBD,GAAII,EAAKW,aAAa,kBAAC,IAAD,CAAcf,GAAII,EAAKW,YAAaC,IAAKZ,EAAKa,cAAeC,OAAQd,EAAKe,mBAEnH,uBAAGlB,MAAM,4CAA2C,kBAAC,IAAD,CAAmBD,GAAII,EAAKW,aAAcX,EAAKa,iBAEnG,yBAAKhB,MAAM,UACX,uBAAGA,MAAM,6DAA6DG,EAAKgB,aAC3E,uBAAGnB,MAAM,uDAAsD,uCAAoB,0BAAMW,wBAAyB,CAAEC,OAAQT,EAAKiB,iBAGjI,gCACA,2CAOJ,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,QAIC,IAAMC,EAAK","file":"component---src-templates-question-template-js-833f5348aeefdd95903f.js","sourcesContent":["import React from 'react';\nimport HeadlineBox from '../components/headline-box';\nimport Byline from '../components/byline';\nimport Layout from '../components/layout';\nimport NavbarTop from '../components/navbar-top';\nimport IssueTiles from '../components/issue-tiles';\nimport CandidateCardsLive from '../components/candidate-cards-live';\nimport Footer from '../components/footer';\nimport '../components/style.scss';\nimport Breadcrumbs from '../components/breadcrumbs';\n\nimport CandidateMug from '../components/mug';\nimport CandidatePageLink from '../components/candidate-link';\nimport IssuePageLink from '../components/issue-link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport QuestionPageLink from '../components/question-link';\nimport { graphql } from \"gatsby\"\n\nexport default ({ data }) => {\n    const question = data.allGoogleSpreadsheetQuestions\n    const answers = data.allGoogleSpreadsheetAnswers\n    return (\n        <Layout>\n        <NavbarTop/>\n        <HeadlineBox>\n            <Byline/>\n        </HeadlineBox>\n        <Breadcrumbs/>\n\n        <div id=\"candidates\">\n      <section class=\"section\">    \n      <div class=\"container\">\n          <div class=\"columns is-centered\">\n              <div class=\"column is-full-mobile is-full-tablet is-9-desktop is-6-fullscreen\">\n              {question.edges.map(({ node }) => (<h2 class=\"title is-size-2-desktop is-size-3-tablet is-size-4-mobile has-rule has-text-centered\"><QuestionPageLink id={node.questionSlug}/>Q: {node.questionLabel}</h2>\n                      ))}\n      <hr class=\"level has-text-centered\"/>\n      <p>&nbsp;</p>\n              <div class=\"columns is-multiline is-mobile is-centered\">\n                {/* QUESTION INTRO */}\n                {question.edges.map(({ node }) => (\n          \n          <div class=\"tile is-ancestor \">\n            <div class=\"tile is-parent is-vertical\">\n              <article class=\"tile notification is-primary is-child is-vertical\">\n                <article class=\"media\">\n                  <figure class=\"media-left\">\n                    <p class=\"title has-text-warning is-size-3 is-inline is-size-5-mobile\">Q:</p>\n                  </figure>\n                  <div class=\"media-content\">\n                  <div class=\"content\">\n                    {/* <p class=\"title label is-size-6\">{node.questionLabel}</p> */}\n                    <h3 class=\"title question nopadtop is-size-4 is-size-5-mobile\"> {node.questionText}</h3>\n                    <div class=\"container has-text-left\"><IssuePageLink id={node.categorySlug}><button class=\"button is-small is-primary is-outlined is-hoverable is-inverted is-fullwidth\"><FontAwesomeIcon icon={\"arrow-circle-right\"} />&nbsp;&nbsp;{node.category}&nbsp;&nbsp;<FontAwesomeIcon icon={node.iconId} /></button></IssuePageLink></div>\n                    \n                    \n                  </div>\n                  </div>\n                </article>\n              </article>\n            </div>\n            <div class=\"tile is-parent is-vertical\">\n              <div class=\"container\">\n                <article class=\"tile is-child is-vertical notification is-light\">\n                 <p class=\"is-size-6\"><strong>Background:</strong>&nbsp;<span dangerouslySetInnerHTML={{ __html: node.background }} /></p>\n               </article>\n              </div>\n            </div>\n          </div>\n        ))}\n                {/* ANSWERS */}\n                <div>\n                {answers.edges.map(({ node }) => (\n                <div class={node.questionSlug}>\n            <p>&nbsp;</p>\n            <div class=\"columns is-centered box\">\n            <div class=\"column is-2 is-3-tablet is-3-desktop is-2-fullhd\">\n            <figure class=\"image container is-96x96\">\n            <CandidatePageLink id={node.candidateId}><CandidateMug id={node.candidateId} alt={node.candidateName} status={node.campaignStatus}/></CandidatePageLink>\n            </figure>\n            <p class=\"title is-size-6 toppad has-text-centered\"><CandidatePageLink id={node.candidateId}>{node.candidateName}</CandidatePageLink></p>\n            </div>\n            <div class=\"column\">\n            <p class=\"title is-size-4-desktop is-size-5-tablet is-size-5-mobile\">{node.shortAnswer}</p>\n            <p class=\"is-size-6-desktop is-size-6-tablet is-size-6-mobile\"><strong>A: </strong><span dangerouslySetInnerHTML={{ __html: node.longAnswer }}/></p>\n            </div>\n            </div>\n            <p>&nbsp;</p>\n            <p>&nbsp;</p>\n            </div>\n            ))}\n              </div>\n                \n        {/* END CARDS */}\n        </div></div></div></div></section></div>\n        <IssueTiles />\n        <CandidateCardsLive />\n        <Footer />\n        </Layout>\n    )\n  }\n  export const query = graphql`\n  query($questionSlug: String!){\n    sitePage {\n      context {\n        questionSlug\n      }\n    }\n    allGoogleSpreadsheetQuestions(filter: {questionSlug: {eq: $questionSlug}}) {\n      edges {\n        node {\n            background\n            category\n            categorySlug\n            questionLabel\n            questionOrder\n            questionSlug\n            questionText\n            iconId\n        }\n      }\n    }\n    allGoogleSpreadsheetAnswers(filter: {questionSlug: {eq: $questionSlug}}) {\n      edges {\n        node {\n            background\n            candidateName\n            category\n            categorySlug\n            questionLabel\n            questionSlug\n            questionText\n            shortAnswer\n            longAnswer\n            candidateId\n            candidateInfo\n            campaignStatus\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}