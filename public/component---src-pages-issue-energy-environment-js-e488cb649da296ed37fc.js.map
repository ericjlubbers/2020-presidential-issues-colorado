{"version":3,"sources":["webpack:///./src/components/fracking-question.js","webpack:///./src/components/fracking-answer.js","webpack:///./src/components/renewable-energy-question.js","webpack:///./src/components/renewable-energy-answer.js","webpack:///./src/components/colorado-river-water-use-question.js","webpack:///./src/components/colorado-river-water-use-answer.js","webpack:///./src/components/wildfires-question.js","webpack:///./src/components/wildfires-answer.js","webpack:///./src/pages/issue/energy-environment.js"],"names":["query","render","data","allGoogleSpreadsheetQuestions","edges","map","node","class","id","questionSlug","questionLabel","questionText","dangerouslySetInnerHTML","__html","background","allGoogleSpreadsheetAnswers","candidateId","alt","candidateName","shortAnswer","longAnswer","intro","allGoogleSpreadsheetCategories","index","icon","iconId","size","categoryName"],"mappings":"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","file":"component---src-pages-issue-energy-environment-js-e488cb649da296ed37fc.js","sourcesContent":["import React from 'react';\nimport './style.scss';\n// import { FaCannabis, FaCapsules, FaMountain, FaGasPump, FaWallet, FaGraduationCap, FaBeer } from 'react-icons/fa';\nimport { StaticQuery, graphql } from 'gatsby';\nimport IssuePageLink from '../components/issue-link';\nimport QuestionPageLink from '../components/question-link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nexport default () => (\n  <StaticQuery\n  query={graphql`\n  {\n  allGoogleSpreadsheetQuestions(filter: {questionSlug: {regex: \"/fracking/\"}}) {\n     edges {\n      node { category  \n      categorySlug\n      background\n      questionLabel\n      questionOrder\n      questionSlug\n      questionText\n      iconId\n    }\n  }\n}\n  }\n`}\n\nrender={data => (\n\n<div>\n     {data.allGoogleSpreadsheetQuestions.edges.map(({ node }) => (\n       <div class=\"tile is-ancestor \">\n         <div class=\"tile is-parent is-vertical\">\n           <article class=\"tile notification is-primary is-child is-vertical\">\n             <article class=\"media\">\n               <figure class=\"media-left\">\n                 <p class=\"title has-text-warning is-size-3 is-size-5-mobile\">Q:</p>\n               </figure>\n               <div class=\"media-content\">\n               <div class=\"content\">\n               <QuestionPageLink id={node.questionSlug}><p class=\"title label is-size-6\">{node.questionLabel}</p></QuestionPageLink>\n                 <h3 class=\"title question is-size-4 is-size-5-mobile\"> {node.questionText}</h3>\n                 \n               </div>\n               </div>\n             </article>\n           </article>\n         </div>\n         <div class=\"tile is-parent is-vertical\">\n           <div class=\"container\">\n             <article class=\"tile is-child is-vertical notification is-light\">\n              <p class=\"is-size-6\"><strong>Background:</strong>&nbsp;<span dangerouslySetInnerHTML={{ __html: node.background }} /></p>\n            </article>\n           </div>\n         </div>\n       </div>\n     ))}\n   </div>\n)}\n/>\n);\n\n  ","        import React from 'react';\n        import './style.scss';\n        // import { FaCannabis, FaCapsules, FaMountain, FaGasPump, FaWallet, FaGraduationCap, FaBeer } from 'react-icons/fa';\n        import { StaticQuery, graphql } from 'gatsby';\n        import CandidateMug from '../components/mug';\n        import CandidatePageLink from '../components/candidate-link';\n      \n        export default () => (\n          <StaticQuery\n          query={graphql`\n          {\n            allGoogleSpreadsheetAnswers(filter: {questionSlug: {regex: \"/fracking/\"}}, sort: {fields: candidateId, order: ASC}) {\n              edges {\n                node {\n                  background\n                  candidateName\n                  category\n                  categorySlug\n                  questionLabel\n                  questionSlug\n                  questionOrder\n                  questionText\n                  shortAnswer\n                  longAnswer\n                  candidateId\n                  candidateInfo\n                  candidateMug\n                }\n              }\n            }\n        }\n        `}\n        \n        render={data => (\n        \n        <div>\n                {data.allGoogleSpreadsheetAnswers.edges.map(({ node }) => (\n                <div class={node.questionSlug}>\n            <p>&nbsp;</p>\n            <div class=\"columns is-centered box\">\n            <div class=\"column is-2 is-3-tablet is-3-desktop is-2-fullhd\">\n            <figure class=\"image container is-96x96\">\n            <CandidatePageLink id={node.candidateId}><CandidateMug id={node.candidateId} alt={node.candidateName}/></CandidatePageLink>\n            </figure>\n            <p class=\"title is-size-6 toppad has-text-centered\"><CandidatePageLink id={node.candidateId}>{node.candidateName}</CandidatePageLink></p>\n            </div>\n            <div class=\"column\">\n            <p class=\"title is-size-4-desktop is-size-5-tablet is-size-5-mobile\">{node.shortAnswer}</p>\n            <p class=\"is-size-6-desktop is-size-6-tablet is-size-6-mobile\"><strong>A: </strong><span dangerouslySetInnerHTML={{ __html: node.longAnswer }}/></p>\n            </div>\n            </div>\n            <p>&nbsp;</p>\n            <p>&nbsp;</p>\n            </div>\n            ))}\n              </div>\n        )}\n        />\n        );\n        \n          ","import React from 'react';\nimport './style.scss';\n// import { FaCannabis, FaCapsules, FaMountain, FaGasPump, FaWallet, FaGraduationCap, FaBeer } from 'react-icons/fa';\nimport { StaticQuery, graphql } from 'gatsby';\nimport IssuePageLink from '../components/issue-link';\nimport QuestionPageLink from '../components/question-link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nexport default () => (\n  <StaticQuery\n  query={graphql`\n  {\n  allGoogleSpreadsheetQuestions(filter: {questionSlug: {regex: \"/renewable-energy/\"}}) {\n     edges {\n      node { category  \n      categorySlug\n      background\n      questionLabel\n      questionOrder\n      questionSlug\n      questionText\n      iconId\n    }\n  }\n}\n  }\n`}\n\nrender={data => (\n\n<div>\n     {data.allGoogleSpreadsheetQuestions.edges.map(({ node }) => (\n       <div class=\"tile is-ancestor \">\n         <div class=\"tile is-parent is-vertical\">\n           <article class=\"tile notification is-primary is-child is-vertical\">\n             <article class=\"media\">\n               <figure class=\"media-left\">\n                 <p class=\"title has-text-warning is-size-3 is-size-5-mobile\">Q:</p>\n               </figure>\n               <div class=\"media-content\">\n               <div class=\"content\">\n               <QuestionPageLink id={node.questionSlug}><p class=\"title label is-size-6\">{node.questionLabel}</p></QuestionPageLink>\n                 <h3 class=\"title question is-size-4 is-size-5-mobile\"> {node.questionText}</h3>\n                 \n               </div>\n               </div>\n             </article>\n           </article>\n         </div>\n         <div class=\"tile is-parent is-vertical\">\n           <div class=\"container\">\n             <article class=\"tile is-child is-vertical notification is-light\">\n              <p class=\"is-size-6\"><strong>Background:</strong>&nbsp;<span dangerouslySetInnerHTML={{ __html: node.background }} /></p>\n            </article>\n           </div>\n         </div>\n       </div>\n     ))}\n   </div>\n)}\n/>\n);\n\n  ","        import React from 'react';\n        import './style.scss';\n        // import { FaCannabis, FaCapsules, FaMountain, FaGasPump, FaWallet, FaGraduationCap, FaBeer } from 'react-icons/fa';\n        import { StaticQuery, graphql } from 'gatsby';\n        import CandidateMug from '../components/mug';\n        import CandidatePageLink from '../components/candidate-link';\n      \n        export default () => (\n          <StaticQuery\n          query={graphql`\n          {\n            allGoogleSpreadsheetAnswers(filter: {questionSlug: {regex: \"/renewable-energy/\"}}, sort: {fields: candidateId, order: ASC}) {\n              edges {\n                node {\n                  background\n                  candidateName\n                  category\n                  categorySlug\n                  questionLabel\n                  questionSlug\n                  questionOrder\n                  questionText\n                  shortAnswer\n                  longAnswer\n                  candidateId\n                  candidateInfo\n                  candidateMug\n                }\n              }\n            }\n        }\n        `}\n        \n        render={data => (\n        \n        <div>\n                {data.allGoogleSpreadsheetAnswers.edges.map(({ node }) => (\n                <div class={node.questionSlug}>\n            <p>&nbsp;</p>\n            <div class=\"columns is-centered box\">\n            <div class=\"column is-2 is-3-tablet is-3-desktop is-2-fullhd\">\n            <figure class=\"image container is-96x96\">\n            <CandidatePageLink id={node.candidateId}><CandidateMug id={node.candidateId} alt={node.candidateName}/></CandidatePageLink>\n            </figure>\n            <p class=\"title is-size-6 toppad has-text-centered\"><CandidatePageLink id={node.candidateId}>{node.candidateName}</CandidatePageLink></p>\n            </div>\n            <div class=\"column\">\n            <p class=\"title is-size-4-desktop is-size-5-tablet is-size-5-mobile\">{node.shortAnswer}</p>\n            <p class=\"is-size-6-desktop is-size-6-tablet is-size-6-mobile\"><strong>A: </strong><span dangerouslySetInnerHTML={{ __html: node.longAnswer }}/></p>\n            </div>\n            </div>\n            <p>&nbsp;</p>\n            <p>&nbsp;</p>\n            </div>\n            ))}\n              </div>\n        )}\n        />\n        );\n        \n          ","import React from 'react';\nimport './style.scss';\n// import { FaCannabis, FaCapsules, FaMountain, FaGasPump, FaWallet, FaGraduationCap, FaBeer } from 'react-icons/fa';\nimport { StaticQuery, graphql } from 'gatsby';\nimport IssuePageLink from '../components/issue-link';\nimport QuestionPageLink from '../components/question-link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nexport default () => (\n  <StaticQuery\n  query={graphql`\n  {\n  allGoogleSpreadsheetQuestions(filter: {questionSlug: {regex: \"/colorado-river-water-use/\"}}) {\n     edges {\n      node { category  \n      categorySlug\n      background\n      questionLabel\n      questionOrder\n      questionSlug\n      questionText\n      iconId\n    }\n  }\n}\n  }\n`}\n\nrender={data => (\n\n<div>\n     {data.allGoogleSpreadsheetQuestions.edges.map(({ node }) => (\n       <div class=\"tile is-ancestor \">\n         <div class=\"tile is-parent is-vertical\">\n           <article class=\"tile notification is-primary is-child is-vertical\">\n             <article class=\"media\">\n               <figure class=\"media-left\">\n                 <p class=\"title has-text-warning is-size-3 is-size-5-mobile\">Q:</p>\n               </figure>\n               <div class=\"media-content\">\n               <div class=\"content\">\n               <QuestionPageLink id={node.questionSlug}><p class=\"title label is-size-6\">{node.questionLabel}</p></QuestionPageLink>\n                 <h3 class=\"title question is-size-4 is-size-5-mobile\"> {node.questionText}</h3>\n                 \n               </div>\n               </div>\n             </article>\n           </article>\n         </div>\n         <div class=\"tile is-parent is-vertical\">\n           <div class=\"container\">\n             <article class=\"tile is-child is-vertical notification is-light\">\n              <p class=\"is-size-6\"><strong>Background:</strong>&nbsp;<span dangerouslySetInnerHTML={{ __html: node.background }} /></p>\n            </article>\n           </div>\n         </div>\n       </div>\n     ))}\n   </div>\n)}\n/>\n);\n\n  ","        import React from 'react';\n        import './style.scss';\n        // import { FaCannabis, FaCapsules, FaMountain, FaGasPump, FaWallet, FaGraduationCap, FaBeer } from 'react-icons/fa';\n        import { StaticQuery, graphql } from 'gatsby';\n        import CandidateMug from '../components/mug';\n        import CandidatePageLink from '../components/candidate-link';\n      \n        export default () => (\n          <StaticQuery\n          query={graphql`\n          {\n            allGoogleSpreadsheetAnswers(filter: {questionSlug: {regex: \"/colorado-river-water-use/\"}}, sort: {fields: candidateId, order: ASC}) {\n              edges {\n                node {\n                  background\n                  candidateName\n                  category\n                  categorySlug\n                  questionLabel\n                  questionSlug\n                  questionOrder\n                  questionText\n                  shortAnswer\n                  longAnswer\n                  candidateId\n                  candidateInfo\n                  candidateMug\n                }\n              }\n            }\n        }\n        `}\n        \n        render={data => (\n        \n        <div>\n                {data.allGoogleSpreadsheetAnswers.edges.map(({ node }) => (\n                <div class={node.questionSlug}>\n            <p>&nbsp;</p>\n            <div class=\"columns is-centered box\">\n            <div class=\"column is-2 is-3-tablet is-3-desktop is-2-fullhd\">\n            <figure class=\"image container is-96x96\">\n            <CandidatePageLink id={node.candidateId}><CandidateMug id={node.candidateId} alt={node.candidateName}/></CandidatePageLink>\n            </figure>\n            <p class=\"title is-size-6 toppad has-text-centered\"><CandidatePageLink id={node.candidateId}>{node.candidateName}</CandidatePageLink></p>\n            </div>\n            <div class=\"column\">\n            <p class=\"title is-size-4-desktop is-size-5-tablet is-size-5-mobile\">{node.shortAnswer}</p>\n            <p class=\"is-size-6-desktop is-size-6-tablet is-size-6-mobile\"><strong>A: </strong><span dangerouslySetInnerHTML={{ __html: node.longAnswer }}/></p>\n            </div>\n            </div>\n            <p>&nbsp;</p>\n            <p>&nbsp;</p>\n            </div>\n            ))}\n              </div>\n        )}\n        />\n        );\n        \n          ","import React from 'react';\nimport './style.scss';\n// import { FaCannabis, FaCapsules, FaMountain, FaGasPump, FaWallet, FaGraduationCap, FaBeer } from 'react-icons/fa';\nimport { StaticQuery, graphql } from 'gatsby';\nimport IssuePageLink from '../components/issue-link';\nimport QuestionPageLink from '../components/question-link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nexport default () => (\n  <StaticQuery\n  query={graphql`\n  {\n  allGoogleSpreadsheetQuestions(filter: {questionSlug: {regex: \"/wildfires/\"}}) {\n     edges {\n      node { category  \n      categorySlug\n      background\n      questionLabel\n      questionOrder\n      questionSlug\n      questionText\n      iconId\n    }\n  }\n}\n  }\n`}\n\nrender={data => (\n\n<div>\n     {data.allGoogleSpreadsheetQuestions.edges.map(({ node }) => (\n       <div class=\"tile is-ancestor \">\n         <div class=\"tile is-parent is-vertical\">\n           <article class=\"tile notification is-primary is-child is-vertical\">\n             <article class=\"media\">\n               <figure class=\"media-left\">\n                 <p class=\"title has-text-warning is-size-3 is-size-5-mobile\">Q:</p>\n               </figure>\n               <div class=\"media-content\">\n               <div class=\"content\">\n               <QuestionPageLink id={node.questionSlug}><p class=\"title label is-size-6\">{node.questionLabel}</p></QuestionPageLink>\n                 <h3 class=\"title question is-size-4 is-size-5-mobile\"> {node.questionText}</h3>\n                 \n               </div>\n               </div>\n             </article>\n           </article>\n         </div>\n         <div class=\"tile is-parent is-vertical\">\n           <div class=\"container\">\n             <article class=\"tile is-child is-vertical notification is-light\">\n              <p class=\"is-size-6\"><strong>Background:</strong>&nbsp;<span dangerouslySetInnerHTML={{ __html: node.background }} /></p>\n            </article>\n           </div>\n         </div>\n       </div>\n     ))}\n   </div>\n)}\n/>\n);\n\n  ","        import React from 'react';\n        import './style.scss';\n        // import { FaCannabis, FaCapsules, FaMountain, FaGasPump, FaWallet, FaGraduationCap, FaBeer } from 'react-icons/fa';\n        import { StaticQuery, graphql } from 'gatsby';\n        import CandidateMug from '../components/mug';\n        import CandidatePageLink from '../components/candidate-link';\n      \n        export default () => (\n          <StaticQuery\n          query={graphql`\n          {\n            allGoogleSpreadsheetAnswers(filter: {questionSlug: {regex: \"/wildfires/\"}}, sort: {fields: candidateId, order: ASC}) {\n              edges {\n                node {\n                  background\n                  candidateName\n                  category\n                  categorySlug\n                  questionLabel\n                  questionSlug\n                  questionOrder\n                  questionText\n                  shortAnswer\n                  longAnswer\n                  candidateId\n                  candidateInfo\n                  candidateMug\n                }\n              }\n            }\n        }\n        `}\n        \n        render={data => (\n        \n        <div>\n                {data.allGoogleSpreadsheetAnswers.edges.map(({ node }) => (\n                <div class={node.questionSlug}>\n            <p>&nbsp;</p>\n            <div class=\"columns is-centered box\">\n            <div class=\"column is-2 is-3-tablet is-3-desktop is-2-fullhd\">\n            <figure class=\"image container is-96x96\">\n            <CandidatePageLink id={node.candidateId}><CandidateMug id={node.candidateId} alt={node.candidateName}/></CandidatePageLink>\n            </figure>\n            <p class=\"title is-size-6 toppad has-text-centered\"><CandidatePageLink id={node.candidateId}>{node.candidateName}</CandidatePageLink></p>\n            </div>\n            <div class=\"column\">\n            <p class=\"title is-size-4-desktop is-size-5-tablet is-size-5-mobile\">{node.shortAnswer}</p>\n            <p class=\"is-size-6-desktop is-size-6-tablet is-size-6-mobile\"><strong>A: </strong><span dangerouslySetInnerHTML={{ __html: node.longAnswer }}/></p>\n            </div>\n            </div>\n            <p>&nbsp;</p>\n            <p>&nbsp;</p>\n            </div>\n            ))}\n              </div>\n        )}\n        />\n        );\n        \n          ","import React from 'react';\nimport HeadlineBox from '../../components/headline-box';\nimport Byline from '../../components/byline';\nimport Layout from '../../components/layout';\nimport NavbarTop from '../../components/navbar-top';\nimport IssueTiles from '../../components/issue-tiles';\nimport CandidateCardsLive from '../../components/candidate-cards-live';\nimport Footer from '../../components/footer';\nimport '../../components/style.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { graphql } from \"gatsby\"\nimport Breadcrumbs from '../../components/breadcrumbs';\nimport FrackingQuestion from '../../components/fracking-question';\nimport FrackingAnswer from '../../components/fracking-answer';\nimport RenewableEnergyQuestion from '../../components/renewable-energy-question';\nimport RenewableEnergyAnswer from '../../components/renewable-energy-answer';\nimport ColoradoRiverWaterUseQuestion from '../../components/colorado-river-water-use-question';\nimport ColoradoRiverWaterUseAnswer from '../../components/colorado-river-water-use-answer';\nimport WildfiresQuestion from '../../components/wildfires-question';\nimport WildfiresAnswer from '../../components/wildfires-answer';\n\n\n\n\n\n\n\nexport default ({ data }) => {\n  const intro = data.allGoogleSpreadsheetCategories\n\n\n  // const questions = data.allGoogleSpreadsheetQuestions\n  return (\n    <Layout>\n    <NavbarTop/>\n    <HeadlineBox>\n    <Byline/>\n    </HeadlineBox>\n    <Breadcrumbs/>\n\n    <div id=\"candidates\">\n    <section class=\"section\">\n    {/* CATEGORY INTRO */}\n    {intro.edges.map(({ node }, index) => (\n      <div><div class=\"container\" id=\"start\">\n      <h2 class=\"title is-2 has-rule has-text-centered\"><FontAwesomeIcon icon={node.iconId} size=\"1x\" />&nbsp;&nbsp;{node.categoryName}</h2>\n      <hr class=\"level has-text-centered\"/>\n      <p>&nbsp;</p>\n      </div></div>\n      ))}\n      </section></div>\n      <div class=\"container\">\n      <div class=\"columns is-centered\">\n      <div class=\"column is-full-mobile is-full-tablet is-9-desktop is-6-fullscreen\">\n      <div class=\"columns is-multiline is-mobile is-centered\">\n      <FrackingQuestion/>\n      <FrackingAnswer/>\n      <RenewableEnergyQuestion/>\n      <RenewableEnergyAnswer/>\n      <ColoradoRiverWaterUseQuestion/>\n      <ColoradoRiverWaterUseAnswer/>\n      <WildfiresQuestion/>\n      <WildfiresAnswer/>\n      </div>   \n      </div></div></div>\n      \n        <IssueTiles />\n        <CandidateCardsLive />\n        <Footer />\n        </Layout>\n        )\n      }\n      export const query = graphql`\n      {\n        allGoogleSpreadsheetCategories(filter: {categorySlug: {eq: \"energy-environment\"}}) {\n          edges {\n            node {\n              categoryName\n              categorySlug\n              iconId\n            }\n          }\n        }\n    }\n      `"],"sourceRoot":""}