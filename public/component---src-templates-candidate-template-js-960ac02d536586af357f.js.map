{"version":3,"sources":["webpack:///./src/templates/candidate-template.js","webpack:///./src/components/breadcrumbs.js"],"names":["data","intro","allGoogleSpreadsheetCandidates","qa","allGoogleSpreadsheetAnswers","id","class","edges","map","index","node","candidateId","alt","candidateName","name","candidateInfo","questionLabel","questionText","dangerouslySetInnerHTML","__html","background","shortAnswer","longAnswer","query","aria-label","to","icon"],"mappings":"6FAAA,0MAee,sBAAe,IAAZA,EAAW,EAAXA,KACRC,EAAQD,EAAKE,+BACbC,EAAKH,EAAKI,4BAChB,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,OAEJ,kBAAC,IAAD,MAEA,yBAAKC,GAAG,cACV,6BAASC,MAAM,WAEdL,EAAMM,MAAMC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACjB,yBAAKJ,MAAM,YAAYD,GAAG,SAC1B,4BAAQC,MAAM,8BACd,kBAAC,IAAD,CAAcD,GAAIK,EAAKC,YAAaC,IAAKF,EAAKG,iBAE9C,gCACA,wBAAIP,MAAM,wFAAuF,kBAAC,IAAD,CAAmBD,GAAIK,EAAKC,YAAaG,KAAMJ,EAAKG,iBACrJ,uBAAGP,MAAM,kFAAiF,4BAAKI,EAAKK,gBACpG,gCACA,wBAAIT,MAAM,4BACV,oCAKA,yBAAKA,MAAM,aACP,yBAAKA,MAAM,uBACP,yBAAKA,MAAM,qEACX,yBAAKA,MAAM,8CAERH,EAAGI,MAAMC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACV,yBAAKL,GAAG,uBACR,yBAAKC,MAAM,oBACX,yBAAKA,MAAM,8BACT,6BAASA,MAAM,qDACb,6BAASA,MAAM,SACf,4BAAQA,MAAM,cACZ,uBAAGA,MAAM,qDAAT,OAEF,yBAAKA,MAAM,iBACb,yBAAKA,MAAM,WACT,uBAAGA,MAAM,yBAAyBI,EAAKM,eACzC,wBAAIV,MAAM,sDAAsDI,EAAKO,mBAKvE,yBAAKX,MAAM,8BACT,yBAAKA,MAAM,aACX,6BAASA,MAAM,mDACf,uBAAGA,MAAM,aAAY,+CAArB,IAAuD,0BAAMY,wBAAyB,CAAEC,OAAQT,EAAKU,mBAKzG,gCACJ,yBAAKd,MAAM,2BACX,yBAAKA,MAAM,UACX,uBAAGA,MAAM,6DAA6DI,EAAKW,aAC3E,uBAAGf,MAAM,uDAAsD,sCAA/D,IAAmF,0BAAMY,wBAAyB,CAAEC,OAAQT,EAAKY,iBAE3H,0CAKZ,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,QAIC,IAAMC,EAAK,c,kCC3FpB,iDAGe,sBACX,6BAAK,gCAAa,yBAAKjB,MAAM,mCAAmCkB,aAAW,eAC7E,4BACE,4BAAI,kBAAC,OAAD,CAAMC,GAAG,KAAI,kBAAC,IAAD,CAAiBC,KAAK,SAAnC,UACJ,4BAAI,kBAAC,OAAD,CAAMD,GAAG,WAAU,kBAAC,IAAD,CAAiBC,KAAK,uBAAzC,YACJ,4BAAI,kBAAC,OAAD,CAAMD,GAAG,eAAc,kBAAC,IAAD,CAAiBC,KAAK,UAA7C","file":"component---src-templates-candidate-template-js-960ac02d536586af357f.js","sourcesContent":["import React from 'react';\nimport HeadlineBox from '../components/headline-box';\nimport Byline from '../components/byline';\nimport Layout from '../components/layout';\nimport NavbarTop from '../components/navbar-top';\nimport IssueTiles from '../components/issue-tiles';\nimport CandidateCardsLive from '../components/candidate-cards-live';\nimport Footer from '../components/footer';\nimport '../components/style.scss';\nimport Breadcrumbs from '../components/breadcrumbs';\n\nimport CandidateMug from '../components/mug';\nimport CandidatePageLink from '../components/candidate-link';\nimport { graphql } from \"gatsby\"\n\nexport default ({ data }) => {\n    const intro = data.allGoogleSpreadsheetCandidates\n    const qa = data.allGoogleSpreadsheetAnswers\n    return (\n        <Layout>\n        <NavbarTop/>\n        <HeadlineBox>\n            <Byline/>\n        </HeadlineBox>\n        <Breadcrumbs/>\n\n        <div id=\"candidates\">\n      <section class=\"section\">\n      {/* CANDIDATE INTRO */}\n      {intro.edges.map(({ node }, index) => (\n      <div class=\"container\" id=\"start\">\n      <figure class=\"image container is-128x128\">\n      <CandidateMug id={node.candidateId} alt={node.candidateName}/>\n      </figure>\n      <p>&nbsp;</p>\n      <h2 class=\"title is-size-2-desktop is-size-3-tablet is-size-4-mobile has-rule has-text-centered\"><CandidatePageLink id={node.candidateId} name={node.candidateName}/></h2>\n      <p class=\"is-size-4-desktop is-size-5-tablet is-size-5-mobile has-rule has-text-centered\"><em>{node.candidateInfo}</em></p>\n      <p>&nbsp;</p>\n      <hr class=\"level has-text-centered\"/>\n      <p>&nbsp;</p>\n      </div>\n      ))} \n      \n      \n      <div class=\"container\">\n          <div class=\"columns is-centered\">\n              <div class=\"column is-full-mobile is-full-tablet is-9-desktop is-6-fullscreen\">\n              <div class=\"columns is-multiline is-mobile is-centered\">\n                {/* CARDS */}\n                {qa.edges.map(({ node }, index) => (\n                    <div id=\"questionsandanswers\">\n                    <div class=\"tile is-ancestor\">\n                    <div class=\"tile is-parent is-vertical\">\n                      <article class=\"tile notification is-primary is-child is-vertical\">\n                        <article class=\"media\">\n                        <figure class=\"media-left\">\n                          <p class=\"title has-text-warning is-size-3 is-size-5-mobile\">Q:</p>\n                        </figure>\n                        <div class=\"media-content\">\n                      <div class=\"content\">\n                        <p class=\"title label is-size-6\">{node.questionLabel}</p>\n                      <h3 class=\"title question nopadtop is-size-4 is-size-5-mobile\">{node.questionText}</h3>\n                        </div></div>\n                      \n                      </article></article>\n                    </div>\n                    <div class=\"tile is-parent is-vertical\">\n                      <div class=\"container\">\n                      <article class=\"tile is-child is-vertical notification is-light\">\n                      <p class=\"is-size-6\"><strong>Background:</strong>&nbsp;<span dangerouslySetInnerHTML={{ __html: node.background }}/></p>\n                      </article>\n                      </div>\n                    </div>\n                  </div>\n                  <p>&nbsp;</p>\n              <div class=\"columns is-centered box\">\n              <div class=\"column\">\n              <p class=\"title is-size-4-desktop is-size-5-tablet is-size-5-mobile\">{node.shortAnswer}</p>\n              <p class=\"is-size-5-desktop is-size-5-tablet is-size-5-mobile\"><strong>A:</strong> <span dangerouslySetInnerHTML={{ __html: node.longAnswer }}/></p>\n              </div>\n              </div><p>&nbsp;</p></div>\n                    ))}\n                \n        {/* END CARDS */}\n        </div></div></div></div></section></div>\n        <IssueTiles />\n        <CandidateCardsLive />\n        <Footer />\n        </Layout>\n    )\n  }\n  export const query = graphql`\n  query($candidateId: String!){\n    sitePage {\n      context {\n        candidateId\n      }\n    }\n    allGoogleSpreadsheetCandidates(filter: {candidateId: {eq: $candidateId}}) {\n      edges {\n        node {\n          candidateId\n          candidateInfo\n          candidateMug\n          candidateName\n        }\n      }\n    }\n    allGoogleSpreadsheetAnswers(filter: {candidateId: {eq: $candidateId}}) {\n      edges {\n        node {\n            background\n            candidateName\n            category\n            categorySlug\n            questionLabel\n            questionSlug\n            questionText\n            shortAnswer\n            longAnswer\n            candidateId\n            candidateInfo\n            candidateMug\n        }\n      }\n    }\n  }\n`","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  Link } from \"gatsby\"\nexport default ()  => (\n    <div><p>&nbsp;</p><nav class=\"breadcrumb is-centered is-medium\" aria-label=\"breadcrumbs\">\n  <ul>\n    <li><Link to=\"/\"><FontAwesomeIcon icon=\"home\" />&nbsp;Home</Link></li>\n    <li><Link to=\"#issues\"><FontAwesomeIcon icon=\"envelope-open-text\" />&nbsp;Issues</Link></li>\n    <li><Link to=\"#candidates\"><FontAwesomeIcon icon=\"users\" />&nbsp;Candidates</Link></li>\n  </ul>\n</nav></div>\n  )"],"sourceRoot":""}